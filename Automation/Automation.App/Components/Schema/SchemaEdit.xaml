<UserControl
    x:Class="Automation.App.Components.Schema.SchemaEdit"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Automation.App.Components.Schema"
    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
    xmlns:fonts="clr-namespace:Joufflu.Shared.Resources.Fonts;assembly=Joufflu.Shared"
    xmlns:dnd="clr-namespace:Joufflu.Data.DnD;assembly=Joufflu.Data"
    xmlns:schema="clr-namespace:Automation.Models.Schema;assembly=Automation.App.Shared"
    mc:Ignorable="d"
    x:Name="ContainerElement">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Components/Schema/SchemaTreeViewItem.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style
                x:Key="TextBlockValidation"
                BasedOn="{StaticResource {x:Type TextBlock}}"
                TargetType="TextBlock">
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource {x:Static adonisUi:Brushes.ErrorBrush}}" />
                        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
                        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                        <Setter Property="TextDecorations">
                            <Setter.Value>
                                <TextDecorationCollection>
                                    <TextDecoration Location="Underline">
                                        <TextDecoration.Pen>
                                            <Pen Brush="{DynamicResource {x:Static adonisUi:Brushes.ErrorBrush}}" Thickness="1">
                                                <Pen.DashStyle>
                                                    <DashStyle Dashes="0,3" />
                                                </Pen.DashStyle>
                                            </Pen>
                                        </TextDecoration.Pen>
                                        <TextDecoration.PenOffset>1</TextDecoration.PenOffset>
                                    </TextDecoration>
                                </TextDecorationCollection>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <!--
    <GroupBox Padding="6,4" DataContext="{Binding ElementName=ContainerElement}">
        <GroupBox.Header>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    FontWeight="Bold"
                    Text="{Binding Root.Name}"
                    VerticalAlignment="Center" />

                <Button
                    Grid.Column="1"
                    Padding="6"
                    Background="Transparent"
                    Command="{Binding Root.AddPropertyCommand}"
                    Style="{StaticResource IconButton}">
                    <fonts:Icon FontSize="10" Text="{x:Static fonts:IconFont.Plus}" />
                </Button>
            </Grid>
        </GroupBox.Header>

        <TreeView
            dnd:DropBehavior.Handler="{Binding DropHandler, Mode=OneTime}"
            Grid.IsSharedSizeScope="True"
            ItemContainerStyle="{StaticResource SchemaTreeViewItem}"
            ItemsSource="{Binding Root.Properties}">
            <TreeView.Resources>
                <HierarchicalDataTemplate DataType="{x:Type schema:SchemaObject}" ItemsSource="{Binding Properties}">
                    <local:SchemaItem
                        x:Name="Item"
                        dnd:DragBehavior.Handler="{Binding DataContext.DragHandler, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}, Mode=OneTime}"
                        Property="{Binding}" />
                    <HierarchicalDataTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                                <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:SchemaEdit}}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="Item" Property="IsActionsVisible" Value="True" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                                <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:SchemaEdit}}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="Item" Property="IsActionsVisible" Value="True" />
                                <Setter TargetName="Item" Property="IsEditing" Value="True" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </HierarchicalDataTemplate.Triggers>
                </HierarchicalDataTemplate>
                <DataTemplate DataType="{x:Type schema:SchemaProperty}">
                    <local:SchemaItem
                        x:Name="Item"
                        dnd:DragBehavior.Handler="{Binding DataContext.DragHandler, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}, Mode=OneTime}"
                        Property="{Binding}" />
                    <DataTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                                <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:SchemaEdit}}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="Item" Property="IsActionsVisible" Value="True" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                                <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:SchemaEdit}}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="Item" Property="IsActionsVisible" Value="True" />
                                <Setter TargetName="Item" Property="IsEditing" Value="True" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </TreeView.Resources>
        </TreeView>
    </GroupBox>
    -->
</UserControl>
