<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:adonisConverters="clr-namespace:AdonisUI.Converters;assembly=AdonisUI"
    xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
    xmlns:dnd="clr-namespace:Joufflu.Data.DnD;assembly=Joufflu.Data"
    xmlns:extensions="clr-namespace:Joufflu.Shared.Extensions;assembly=Joufflu.Shared"
    xmlns:font="clr-namespace:Joufflu.Shared.Resources.Fonts;assembly=Joufflu.Shared"
    xmlns:local="clr-namespace:Automation.App.Components.Schema"
    xmlns:schema="clr-namespace:Automation.Models.Schema;assembly=Automation.App.Shared"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:s="clr-namespace:System;assembly=mscorlib">
    <Style TargetType="{x:Type local:SchemaEdit}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SchemaEdit}">
                    <GroupBox Padding="6,4" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                        <GroupBox.Header>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    FontWeight="Bold"
                                    Text="{Binding Root.Name}"
                                    VerticalAlignment="Center" />

                                <Button
                                    Grid.Column="1"
                                    Padding="6"
                                    Background="Transparent"
                                    Command="{Binding Root.AddPropertyCommand}"
                                    Style="{StaticResource IconButton}">
                                    <font:Icon FontSize="10" Text="{x:Static font:IconFont.Plus}" />
                                </Button>
                            </Grid>
                        </GroupBox.Header>

                        <TreeView
                            dnd:DropBehavior.Handler="{Binding DropHandler, Mode=OneTime}"
                            Grid.IsSharedSizeScope="True"
                            ItemContainerStyle="{StaticResource SchemaTreeViewItem}"
                            ItemsSource="{Binding Root.Properties}">
                            <TreeView.Resources>
                                <HierarchicalDataTemplate DataType="{x:Type schema:SchemaObject}" ItemsSource="{Binding Properties}">
                                    <local:SchemaItem
                                        x:Name="Item"
                                        dnd:DragBehavior.Handler="{Binding DataContext.DragHandler, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}, Mode=OneTime}"
                                        Property="{Binding}" />
                                    <HierarchicalDataTemplate.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                                                <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:SchemaEdit}}}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter TargetName="Item" Property="IsActionsVisible" Value="True" />
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                                                <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:SchemaEdit}}}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter TargetName="Item" Property="IsActionsVisible" Value="True" />
                                                <Setter TargetName="Item" Property="IsEditing" Value="True" />
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                    </HierarchicalDataTemplate.Triggers>
                                </HierarchicalDataTemplate>
                                <DataTemplate DataType="{x:Type schema:SchemaValueProperty}">
                                    <local:SchemaItem
                                        x:Name="Item"
                                        dnd:DragBehavior.Handler="{Binding DataContext.DragHandler, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}, Mode=OneTime}"
                                        Property="{Binding}" />
                                    <DataTemplate.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                                                <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:SchemaEdit}}}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter TargetName="Item" Property="IsActionsVisible" Value="True" />
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                                                <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:SchemaEdit}}}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter TargetName="Item" Property="IsActionsVisible" Value="True" />
                                                <Setter TargetName="Item" Property="IsEditing" Value="True" />
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </TreeView.Resources>
                        </TreeView>
                    </GroupBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>