<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:adonisConverters="clr-namespace:AdonisUI.Converters;assembly=AdonisUI"
    xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
    xmlns:dnd="clr-namespace:Joufflu.Data.DnD;assembly=Joufflu.Data"
    xmlns:extensions="clr-namespace:Joufflu.Shared.Extensions;assembly=Joufflu.Shared"
    xmlns:font="clr-namespace:Joufflu.Shared.Resources.Fonts;assembly=Joufflu.Shared"
    xmlns:local="clr-namespace:Automation.App.Components.Schema"
    xmlns:schema="clr-namespace:Automation.Models.Schema;assembly=Automation.App.Shared"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:s="clr-namespace:System;assembly=mscorlib">
    <Style
        x:Key="TextBlockValidation"
        BasedOn="{StaticResource {x:Type TextBlock}}"
        TargetType="TextBlock">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="Foreground" Value="{StaticResource {x:Static adonisUi:Brushes.ErrorBrush}}" />
                <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                <Setter Property="TextDecorations">
                    <Setter.Value>
                        <TextDecorationCollection>
                            <TextDecoration Location="Underline">
                                <TextDecoration.Pen>
                                    <Pen Brush="{DynamicResource {x:Static adonisUi:Brushes.ErrorBrush}}" Thickness="1">
                                        <Pen.DashStyle>
                                            <DashStyle Dashes="0,3" />
                                        </Pen.DashStyle>
                                    </Pen>
                                </TextDecoration.Pen>
                                <TextDecoration.PenOffset>1</TextDecoration.PenOffset>
                            </TextDecoration>
                        </TextDecorationCollection>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:SchemaItem}">
        <Style.Resources>
            <local:DepthToMarginConverter x:Key="DepthToMarginConverter" />
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SchemaItem}">
                    <Grid
                        Height="24"
                        Background="Transparent"
                        DataContext="{Binding Property, RelativeSource={RelativeSource TemplatedParent}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" SharedSizeGroup="Name" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Grid Margin="{Binding Depth, Converter={StaticResource DepthToMarginConverter}}">
                            <TextBlock
                                Margin="4,0"
                                VerticalAlignment="Center"
                                Style="{StaticResource TextBlockValidation}"
                                Text="{Binding Name}" />
                            <TextBox
                                Name="TextBoxName"
                                Margin="0,1"
                                Padding="4,0"
                                Text="{Binding Name, Mode=TwoWay}"
                                Visibility="Collapsed" />
                        </Grid>

                        <Grid Grid.Column="1" Margin="2,0,0,0">
                            <ComboBox
                                Name="ComboBoxType"
                                Width="100"
                                Margin="0,1"
                                HorizontalAlignment="Left"
                                ItemsSource="{extensions:EnumValuesExtension {x:Type schema:EnumPropertyKind}}"
                                SelectedItem="{Binding Kind, Mode=TwoWay}"
                                Visibility="Collapsed">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <local:IconPropertyKind Type="{Binding}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </Grid>

                        <ContentPresenter
                            Name="ContainerActions"
                            Grid.Column="3"
                            Margin="1"
                            HorizontalAlignment="Right"
                            Content="{Binding}"
                            Visibility="Collapsed">
                            <ContentPresenter.ContentTemplateSelector>
                                <local:ActionTemplateSelector>
                                    <local:ActionTemplateSelector.SchemaObjectTemplate>
                                        <DataTemplate DataType="{x:Type schema:SchemaObject}">
                                            <StackPanel Orientation="Horizontal">
                                                <Button
                                                    Margin="1,0,0,0"
                                                    Padding="6"
                                                    Background="Transparent"
                                                    Command="{Binding AddPropertyCommand}"
                                                    Style="{StaticResource IconButton}">
                                                    <font:Icon FontSize="10" Text="{x:Static font:IconFont.Plus}" />
                                                </Button>
                                                <Button
                                                    Margin="1,0,0,0"
                                                    Padding="6"
                                                    Background="Transparent"
                                                    Command="{Binding RemoveCommand}"
                                                    Style="{StaticResource IconButton}">
                                                    <font:Icon FontSize="10" Text="{x:Static font:IconFont.Trash}" />
                                                </Button>
                                            </StackPanel>
                                        </DataTemplate>
                                    </local:ActionTemplateSelector.SchemaObjectTemplate>
                                    <local:ActionTemplateSelector.SchemaPropertyTemplate>
                                        <DataTemplate DataType="{x:Type schema:SchemaProperty}">
                                            <Button
                                                Margin="1,0,0,0"
                                                Padding="6"
                                                Background="Transparent"
                                                Command="{Binding RemoveCommand}"
                                                Style="{StaticResource IconButton}">
                                                <font:Icon FontSize="10" Text="{x:Static font:IconFont.Trash}" />
                                            </Button>
                                        </DataTemplate>
                                    </local:ActionTemplateSelector.SchemaPropertyTemplate>
                                </local:ActionTemplateSelector>
                            </ContentPresenter.ContentTemplateSelector>
                        </ContentPresenter>

                        <Border
                            Name="DropPreview"
                            Grid.ColumnSpan="2"
                            BorderBrush="{StaticResource {x:Static adonisUi:Brushes.AccentIntenseHighlightBorderBrush}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Property.IsHovered, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="DropPreview" Property="BorderThickness" Value="0,4,0,0" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsActionsVisible, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="ContainerActions" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsEditing, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="TextBoxName" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ComboBoxType" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
