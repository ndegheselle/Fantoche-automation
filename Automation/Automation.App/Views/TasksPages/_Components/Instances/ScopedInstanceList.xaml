<UserControl
    x:Class="Automation.App.Views.TasksPages.Components.Instances.ScopedInstanceList"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Automation.App.Views.TasksPages.Components"
    xmlns:fonts="clr-namespace:Joufflu.Shared.Resources.Fonts;assembly=Joufflu.Shared"
    xmlns:jouffluData="clr-namespace:Joufflu.Data.Components;assembly=Joufflu.Data"
    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
    mc:Ignorable="d"
    d:DesignHeight="450"
    d:DesignWidth="800">
    <Grid DataContext="{Binding History, RelativeSource={RelativeSource AncestorType={x:Type local:ScopedHistory}}}">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        <DataGrid
            AutoGenerateColumns="False"
            CanUserAddRows="False"
            CanUserSortColumns="False"
            CanUserDeleteRows="False"
            ItemsSource="{Binding Data}">
            <DataGrid.Resources>
                <Style TargetType="TextBlock" x:Key="StatusTextBlock">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Status}" Value="Pending">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.AlertBrush}}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Stopped">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.AlertBrush}}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Completed">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.SuccessBrush}}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Failed">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.ErrorBrush}}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Status">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <fonts:Icon>
                                    <fonts:Icon.Style>
                                        <Style TargetType="fonts:Icon" BasedOn="{StaticResource {x:Type fonts:Icon}}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Status}" Value="Pending">
                                                    <Setter Property="Text" Value="{x:Static fonts:IconFont.Clock}" />
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.AlertBrush}}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Status}" Value="Running">
                                                    <Setter Property="Text" Value="{x:Static fonts:IconFont.Hourglass}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Status}" Value="Stopped">
                                                    <Setter Property="Text" Value="{x:Static fonts:IconFont.CirclePause}" />
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.AlertBrush}}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Status}" Value="Completed">
                                                    <Setter Property="Text" Value="{x:Static fonts:IconFont.CircleCheck}" />
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.SuccessBrush}}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Status}" Value="Failed">
                                                    <Setter Property="Text" Value="{x:Static fonts:IconFont.CircleXmark}" />
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.ErrorBrush}}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </fonts:Icon.Style>
                                </fonts:Icon>
                                <TextBlock
                                    Margin="4,0,0,0"
                                    Text="{Binding Status}"
                                    Style="{StaticResource StatusTextBlock}" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Start" Binding="{Binding StartDate}" />
                <DataGridTextColumn Header="End" Binding="{Binding EndDate}" />
            </DataGrid.Columns>
        </DataGrid>
        <jouffluData:Paging
            x:Name="InstancesPaging"
            PagingChange="InstancesPaging_PagingChange"
            Margin="0,2,0,0"
            Grid.Row="1"
            PageNumber="{Binding Page}"
            Capacity="{Binding PageSize}"
            Total="{Binding Total}" />
    </Grid>
</UserControl>
