<UserControl
    x:Class="Automation.App.Views.TasksPages.Components.ScopedSelector"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Automation.App.Views.TasksPages.Components"
    xmlns:viewmodels="clr-namespace:Automation.App.Shared.ViewModels.Tasks;assembly=Automation.App.Shared"
    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
    xmlns:components="clr-namespace:Automation.App.Views.TasksPages.Components"
    xmlns:fonts="clr-namespace:Joufflu.Shared.Resources.Fonts;assembly=Joufflu.Shared"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ContextMenu x:Key="AddContextMenu" DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
            <MenuItem Header="Add">
                <MenuItem.Icon>
                    <fonts:Icon Text="{x:Static fonts:IconFont.Plus}" />
                </MenuItem.Icon>

                <MenuItem Header="Add scope" Command="{Binding AddScopeCommand}">
                    <MenuItem.Icon>
                        <components:NodeIcon Type="Scope" Margin="0,0,4,0" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Add workflow" Command="{Binding AddWorkflowCommand}">
                    <MenuItem.Icon>
                        <components:NodeIcon Type="Workflow" Margin="0,0,4,0" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Add task" Command="{Binding AddTaskCommand}">
                    <MenuItem.Icon>
                        <components:NodeIcon Type="Task" Margin="0,0,4,0" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Remove" Command="{Binding RemoveSelectedCommand}">
                <MenuItem.Icon>
                    <fonts:Icon Text="{x:Static fonts:IconFont.Trash}" Foreground="{DynamicResource {x:Static adonisUi:Brushes.ErrorBrush}}" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <Grid Margin="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <TextBox />
            <fonts:Icon
                Margin="8,0"
                HorizontalAlignment="Right"
                Text="{x:Static fonts:IconFont.MagnifyingGlass}"
                Foreground="{DynamicResource {x:Static adonisUi:Brushes.Layer1BorderBrush}}" />
            <Button
                Margin="2,0,0,0"
                Click="Add_Click"
                Grid.Column="1"
                ToolTip="Add new"
                ContextMenu="{StaticResource AddContextMenu}"
                Tag="{Binding RelativeSource={RelativeSource AncestorType=local:ScopedSelector}}">
                <fonts:Icon Text="{x:Static fonts:IconFont.Plus}" />
            </Button>
        </Grid>

        <TreeView
            Grid.Row="1"
            DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:ScopedSelector}}}"
            Background="{DynamicResource {x:Static adonisUi:Brushes.Layer1BackgroundBrush}}"
            MinWidth="200"
            ItemsSource="{Binding RootScope.SortedChildrens}"
            PreviewMouseRightButtonDown="TreeView_PreviewMouseRightButtonDown"
            SelectedItemChanged="TreeView_SelectedItemChanged"
            Tag="{Binding RelativeSource={RelativeSource AncestorType=local:ScopedSelector}}"
            ContextMenu="{StaticResource AddContextMenu}">
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource TreeViewItemStyle}">
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="IsExpanded">
                        <Setter.Value>
                            <!--  Avoids warnings for nodes that do not have the "IsExpanded" property  -->
                            <PriorityBinding>
                                <Binding Path="IsExpanded" Mode="TwoWay" />
                            </PriorityBinding>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TreeView.ItemContainerStyle>
            <TreeView.Resources>
                <HierarchicalDataTemplate DataType="{x:Type viewmodels:Scope}" ItemsSource="{Binding SortedChildrens}">
                    <StackPanel Orientation="Horizontal">
                        <local:NodeIcon Type="Scope" Margin="0,0,4,0" />
                        <TextBlock Text="{Binding Name}" />
                    </StackPanel>
                </HierarchicalDataTemplate>
                <DataTemplate DataType="{x:Type viewmodels:ScopedElement}">
                    <StackPanel Orientation="Horizontal">
                        <local:NodeIcon Type="{Binding Type}" Margin="0,0,4,0" />
                        <TextBlock Text="{Binding Name}" />
                    </StackPanel>
                </DataTemplate>
            </TreeView.Resources>
        </TreeView>
    </Grid>
</UserControl>
