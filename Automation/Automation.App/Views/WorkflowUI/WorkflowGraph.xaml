<UserControl
    x:Class="Automation.App.Views.WorkflowUI.WorkflowGraph"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:nodify="clr-namespace:Nodify;assembly=Nodify"
    xmlns:local="clr-namespace:Automation.App.Views.WorkflowUI"
    xmlns:graph="clr-namespace:Automation.App.ViewModels.Graph"
    xmlns:baseViewModels="clr-namespace:Automation.Base.ViewModels;assembly=Automation.Base"
    xmlns:display="clr-namespace:Automation.App.Components.Display"
    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
    mc:Ignorable="d">
    <UserControl.Resources>
        <GeometryDrawing
            x:Key="SmallGridGeometry"
            Geometry="M0,0 L0,1 0.03,1 0.03,0.03 1,0.03 1,0 Z"
            Brush="{StaticResource NodifyEditor.SelectionRectangleBackgroundBrush}" />

        <GeometryDrawing
            x:Key="LargeGridGeometry"
            Geometry="M0,0 L0,1 0.015,1 0.015,0.015 1,0.015 1,0 Z"
            Brush="{StaticResource NodifyEditor.SelectionRectangleBackgroundBrush}" />

        <DrawingBrush
            x:Key="SmallGridLinesDrawingBrush"
            TileMode="Tile"
            ViewportUnits="Absolute"
            Viewport="0 0 20 20"
            Transform="{Binding ViewportTransform, ElementName=Editor}"
            Drawing="{StaticResource SmallGridGeometry}" />

        <DrawingBrush
            x:Key="LargeGridLinesDrawingBrush"
            TileMode="Tile"
            ViewportUnits="Absolute"
            Opacity="0.5"
            Viewport="0 0 100 100"
            Transform="{Binding ViewportTransform, ElementName=Editor}"
            Drawing="{StaticResource LargeGridGeometry}" />

        <ControlTemplate x:Key="FlowConnector" TargetType="Control">
            <Polygon
                Width="12"
                Height="14"
                Points="1,13 11,7 1,1"
                StrokeDashCap="Round"
                StrokeLineJoin="Round"
                StrokeStartLineCap="Round"
                StrokeEndLineCap="Round"
                Stroke="{TemplateBinding BorderBrush}"
                Fill="{TemplateBinding Background}"
                StrokeThickness="2" />
        </ControlTemplate>

    </UserControl.Resources>
    <Grid DataContext="{Binding EditorData, RelativeSource={RelativeSource AncestorType={x:Type local:WorkflowGraph}}}" Background="{StaticResource NodifyEditor.BackgroundBrush}">
        <nodify:NodifyEditor
            x:Name="Editor"
            SelectedItems="{Binding SelectedNodes}"
            Background="{StaticResource SmallGridLinesDrawingBrush}"
            ItemsSource="{Binding Workflow.Nodes}"
            Connections="{Binding Workflow.Connections}"
            PendingConnection="{Binding PendingConnection}"
            DisconnectConnectorCommand="{Binding DisconnectConnectorCommand}">
            <nodify:NodifyEditor.Resources>
                <DataTemplate DataType="{x:Type baseViewModels:NodeGroup}">
                    <nodify:GroupingNode
                        ActualSize="{Binding Size}"
                        Header="{Binding Name}"
                        MovementMode="Group" />
                </DataTemplate>

                <DataTemplate DataType="{x:Type baseViewModels:TaskNode}">
                    <nodify:Node
                        Input="{Binding Inputs}"
                        Output="{Binding Outputs}"
                        Header="{Binding Name}">
                        <nodify:Node.Style>
                            <Style TargetType="{x:Type nodify:Node}" BasedOn="{StaticResource {x:Type nodify:Node}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Type}" Value="FlowTask">
                                        <Setter Property="HeaderBrush" Value="{DynamicResource ItemContainer.BorderBrush}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </nodify:Node.Style>
                        <nodify:Node.InputConnectorTemplate>
                            <DataTemplate DataType="{x:Type baseViewModels:NodeConnector}">
                                <nodify:NodeInput
                                    Header="{Binding Name}"
                                    IsConnected="{Binding IsConnected}"
                                    Anchor="{Binding Anchor, Mode=OneWayToSource}">
                                    <nodify:NodeInput.Style>
                                        <Style TargetType="{x:Type nodify:NodeInput}" BasedOn="{StaticResource {x:Type nodify:NodeInput}}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Type}" Value="{x:Static baseViewModels:EnumNodeConnectorType.Flow}">
                                                    <Setter Property="ConnectorTemplate" Value="{StaticResource FlowConnector}" />
                                                    <Setter Property="BorderBrush" Value="{StaticResource {x:Static adonisUi:Brushes.ForegroundBrush}}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </nodify:NodeInput.Style>
                                </nodify:NodeInput>
                            </DataTemplate>
                        </nodify:Node.InputConnectorTemplate>
                        <nodify:Node.OutputConnectorTemplate>
                            <DataTemplate DataType="{x:Type baseViewModels:NodeConnector}">
                                <nodify:NodeOutput
                                    Header="{Binding Name}"
                                    IsConnected="{Binding IsConnected}"
                                    Anchor="{Binding Anchor, Mode=OneWayToSource}">
                                    <nodify:NodeOutput.Style>
                                        <Style TargetType="{x:Type nodify:NodeOutput}" BasedOn="{StaticResource {x:Type nodify:NodeOutput}}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Type}" Value="{x:Static baseViewModels:EnumNodeConnectorType.Flow}">
                                                    <Setter Property="ConnectorTemplate" Value="{StaticResource FlowConnector}" />
                                                    <Setter Property="BorderBrush" Value="{StaticResource {x:Static adonisUi:Brushes.ForegroundBrush}}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </nodify:NodeOutput.Style>
                                </nodify:NodeOutput>
                            </DataTemplate>
                        </nodify:Node.OutputConnectorTemplate>
                    </nodify:Node>
                </DataTemplate>
            </nodify:NodifyEditor.Resources>
            <nodify:NodifyEditor.ItemContainerStyle>
                <Style TargetType="{x:Type nodify:ItemContainer}">
                    <Setter Property="Location" Value="{Binding Location}" />
                </Style>
            </nodify:NodifyEditor.ItemContainerStyle>
            <nodify:NodifyEditor.ConnectionTemplate>
                <DataTemplate DataType="{x:Type baseViewModels:NodeConnection}">
                    <nodify:Connection Source="{Binding Source.Anchor}" Target="{Binding Target.Anchor}">
                        <nodify:Connection.Style>
                            <Style TargetType="{x:Type nodify:Connection}" BasedOn="{StaticResource {x:Type nodify:Connection}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Source.Type}" Value="{x:Static baseViewModels:EnumNodeConnectorType.Data}">
                                        <Setter Property="ArrowEnds" Value="None" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Source.Type}" Value="{x:Static baseViewModels:EnumNodeConnectorType.Flow}">
                                        <Setter Property="Stroke" Value="{StaticResource {x:Static adonisUi:Brushes.ForegroundBrush}}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </nodify:Connection.Style>
                    </nodify:Connection>
                </DataTemplate>
            </nodify:NodifyEditor.ConnectionTemplate>
            <nodify:NodifyEditor.PendingConnectionTemplate>
                <DataTemplate DataType="{x:Type graph:PendingConnection}">
                    <nodify:PendingConnection
                        StartedCommand="{Binding StartCommand}"
                        CompletedCommand="{Binding FinishCommand}"
                        AllowOnlyConnectors="True" />
                </DataTemplate>
            </nodify:NodifyEditor.PendingConnectionTemplate>
        </nodify:NodifyEditor>
        <Grid Background="{StaticResource LargeGridLinesDrawingBrush}" Panel.ZIndex="-2" />

        <Border
            VerticalAlignment="Bottom"
            HorizontalAlignment="Left"
            Margin="2"
            CornerRadius="{StaticResource {x:Static adonisUi:Dimensions.CornerRadius}}"
            BorderThickness="{StaticResource {x:Static adonisUi:Dimensions.BorderThickness}}"
            Background="{DynamicResource {x:Static adonisUi:Brushes.Layer0BackgroundBrush}}"
            BorderBrush="{DynamicResource {x:Static adonisUi:Brushes.Layer1BorderBrush}}">
            <StackPanel>
                <Button
                    Style="{StaticResource IconButton}"
                    Click="ButtonZoomIn_Click"
                    ToolTip="Zoom in">
                    <TextBlock
                        FontFamily="{StaticResource FontAwesomeSolid}"
                        VerticalAlignment="Center"
                        Text="{x:Static display:IconFont.Plus}" />
                </Button>
                <Button
                    Style="{StaticResource IconButton}"
                    Click="ButtonZoomOut_Click"
                    ToolTip="Zoom out">
                    <TextBlock
                        FontFamily="{StaticResource FontAwesomeSolid}"
                        VerticalAlignment="Center"
                        Text="{x:Static display:IconFont.Minus}" />
                </Button>
                <Button
                    Style="{StaticResource IconButton}"
                    Click="ButtonZoomFit_Click"
                    ToolTip="Fit nodes to screen">
                    <TextBlock
                        FontFamily="{StaticResource FontAwesomeSolid}"
                        VerticalAlignment="Center"
                        Text="{x:Static display:IconFont.Expand}" />
                </Button>
                <ToggleButton
                    Style="{StaticResource IconToggleButton}"
                    ToolTip="Allow snaping"
                    Click="ToggleButtonSnapping_Click">
                    <TextBlock
                        FontFamily="{StaticResource FontAwesomeSolid}"
                        VerticalAlignment="Center"
                        Text="{x:Static display:IconFont.TableCells}" />
                </ToggleButton>
            </StackPanel>
        </Border>

        <Border
            VerticalAlignment="Bottom"
            HorizontalAlignment="Right"
            Margin="2"
            CornerRadius="{StaticResource {x:Static adonisUi:Dimensions.CornerRadius}}"
            BorderThickness="{StaticResource {x:Static adonisUi:Dimensions.BorderThickness}}"
            Background="{DynamicResource {x:Static adonisUi:Brushes.Layer0BackgroundBrush}}"
            BorderBrush="{DynamicResource {x:Static adonisUi:Brushes.Layer1BorderBrush}}">
            <StackPanel Orientation="Horizontal">
                <Button
                    Style="{StaticResource IconButton}"
                    Click="ButtonAdd_Click"
                    ToolTip="Add node">
                    <TextBlock
                        FontFamily="{StaticResource FontAwesomeSolid}"
                        VerticalAlignment="Center"
                        Text="{x:Static display:IconFont.Plus}" />
                </Button>
                <Button
                    Style="{StaticResource IconButton}"
                    Click="ButtonGroup_Click"
                    ToolTip="Group selected nodes">
                    <TextBlock
                        FontFamily="{StaticResource FontAwesomeSolid}"
                        VerticalAlignment="Center"
                        Text="{x:Static display:IconFont.ObjectGroup}" />
                </Button>
                <Button
                    Style="{StaticResource IconButton}"
                    Click="ButtonDelete_Click"
                    ToolTip="Delete selection">
                    <TextBlock
                        FontFamily="{StaticResource FontAwesomeSolid}"
                        VerticalAlignment="Center"
                        Text="{x:Static display:IconFont.Trash}" />
                </Button>
            </StackPanel>
        </Border>
    </Grid>
</UserControl>
